# flaskの設定
1. back/appディレクトリ内に.envファイルを作成
2. .envファイル内に環境変数を作成する。（README.md参照）

# データベースのマイグレーション（移行）方法
1. docker compose build を実施
2. docker compose up -d を実施
3. docker ps でMySQLとflaskのコンテナが動いていることを確認
4. docker compose exec flask /bin/bash でflaskコンテナ内に入る
5. flask db initの実施（すでにmigrationsファイルがある場合はerrorとなるので削除後実施）
6. flask db migrateの実施（flaskファイル内のDB設計情報がDBコンテナの内容に反映される）
7. flask db upgradeの実施

# MySQLの操作
1. flaskコンテナから出てdbコンテナへ入る（3.のコマンドの"flask"を"db"に変えて実施）
2. mysql -uroot -p でmysqlにログイン（パスワード=password）
## mysqlにログイン後は、コードの末尾に;を付ける（今回はコメントアウトするのせ省略）
3. show databases でflasの環境変数に指定したDBがあるか確認
4. use Stretch_DB でデータベースを選択後、show columns for users でusersテーブル内に正しくカラムが入っているか確認
5. create user 'flaskの環境変数に指定したユーザー名'@'%' identified by 'flaskの環境変数に指定したパスワード'
   でデータベースを操作するユーザーとパスワードを作成
6. grant all on flaskの環境変数に指定したデータベース.* to '作成したユーザー名'@'%' で
   ユーザーに任意のDBのみに権限を付与
7. exit でrootユーザーから出る。
8. mysql -u作成したユーザー名 -p で先ほど作成したユーザーでログインする（パスワード = 作成したパスワード）
9. use Stretch_DB で使用するDBを選択し、exit

# Dockerの起動
1. docker compose up でflaskとDBを立ち上げた状態で、ブラウザに入り「localhost:5001」でflaskでアプリが立ち上げ、
   新規登録、ログインができるか確認する。